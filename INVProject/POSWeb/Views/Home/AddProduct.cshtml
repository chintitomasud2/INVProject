@model BusinessEntity.Product

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_layout1.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
<style>
    h1 {
    clear: both;
    color: #34d1be;
    margin: 15px 0;
}
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="clearfix">
            <h1 class="text-center">Add Product</h1>            
        </div>
    </div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" ng-app="" >
        <form name="myForm">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" >
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })                 
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>            
                <span ng-show="myForm.ProductName.$touched && myForm.ProductName.$invalid">The name is required.</span>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CatagoryId, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.CatagoryId, (List<SelectListItem>)ViewBag.Catagory, "  -----Select Catagory-----  ", new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.CatagoryId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.CatagoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProDesc, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ProDesc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProDesc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CostPrice, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProBarCode, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ProBarCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProBarCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QuantityPerUnit, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.QuantityPerUnit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantityPerUnit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="Create" ng-disabled="userForm.$invalid" class="btn btn-default" >Add</button>
                </div>
            </div>
        </form>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Product")
</div>


<script>
    // create angular app
    var validationApp = angular.module('PosApp', []);

    // create angular controller
    validationApp.controller('mainController', function ($scope) {

        // function to submit the form after all validation has occurred
        $scope.submitForm = function () {

            // check to make sure the form is completely valid
            if ($scope.userForm.$valid) {
                alert('our form is amazing');
            }

        };

    });

</script>